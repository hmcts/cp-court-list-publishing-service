services:
  db:
    image: postgres:16-alpine
    container_name: APP_NAME_CP_CDK_DB_it
    environment:
      POSTGRES_DB: courtlistpublishing
      POSTGRES_USER: courtlistpublishing
      POSTGRES_PASSWORD: courtlistpublishing
    ports:
      - "55432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U courtlistpublishing -d courtlistpublishing"]
      interval: 5s
      timeout: 3s
      retries: 30

  app:
    container_name: APP_NAME_app_it
    build:
      context: ..                # project root (so Docker has access to source)
      dockerfile: docker/Dockerfile
    ports:
      - "${SERVER_PORT:-8082}:${SERVER_PORT:-8082}"
      - "8787:5005"
    environment:
      APP_NAME_DATASOURCE_URL: jdbc:postgresql://db:5432/courtlistpublishing
      APP_NAME_DATASOURCE_USERNAME: courtlistpublishing
      APP_NAME_DATASOURCE_PASSWORD: courtlistpublishing
      SERVER_PORT: ${SERVER_PORT:-8082}
      APP_NAME_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      JAVA_TOOL_OPTIONS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      AZURE_STORAGE_ACCOUNT_NAME: ${AZURE_STORAGE_ACCOUNT_NAME}
      AZURE_STORAGE_ACCOUNT_KEY: ${AZURE_STORAGE_ACCOUNT_KEY}
      AZURE_STORAGE_ENABLED: ${AZURE_STORAGE_ENABLED}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${SERVER_PORT:-8082}/actuator/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 12